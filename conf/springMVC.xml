<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 扫描组件，将加上@Controller注解的类作为springMVC的控制层 -->
	<!-- <context:component-scan base-package="com.hr.test"></context:component-scan> -->
	 
	<context:component-scan base-package="com.hr.controller"></context:component-scan>
	
	<!-- 配置视图解析器
		作用： 将prefix + 视图名称 + suffix 确定最终要跳转的页面 
	 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 
		<mvc:default-servlet-handler/> 将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler，
			它会对进入 DispatcherServlet 的请求进行筛查，如果发现是没有经过映射的请求，
			就将该请求交由 WEB 应用服务器默认的 Servlet 处理，如果不是静态资源的请求，才由 DispatcherServlet 继续处理
			一般 WEB 应用服务器默认的 Servlet 的名称都是 default。
			若所使用的 WEB 服务器的默认 Servlet 名称不是 default，则需要通过 default-servlet-name 属性显式指定   
	 -->
	<mvc:default-servlet-handler/>
	
	<!-- mvc驱动 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 
		将java里上传文件的file类型解析成multipartResolver，id为固定值multipartResolver
		注意：文件解析器的bean中id必须设置为multipartResolver
	 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置文件解析的编码，一定要和页面的pageEncoding保持一致 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 最大上传文件大小，不支持表达式 -->
		<property name="maxUploadSize" value="88888888"></property>
	</bean>

</beans>
